/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/defaults_list.py:251: UserWarning: In '_3_frozen_lake': Defaults list is missing `_self_`. See https://hydra.cc/docs/1.2/upgrades/1.0_to_1.1/default_composition_order for more information
  warnings.warn(msg, UserWarning)
2025-06-09 11:45:27,906	INFO worker.py:1888 -- Started a local Ray instance.
[36m(TaskRunner pid=410309)[0m DeprecationWarning: `ray.state.available_resources_per_node` is a private attribute and access will be removed in a future Ray version.
[36m(TaskRunner pid=410309)[0m WARNING:2025-06-09 11:45:36,830:Waiting for register center actor BiVqBK_register_center to be ready. Elapsed time: 0 seconds out of 300 seconds.
[36m(WorkerDict pid=410985)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForTokenClassification is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`
[36m(WorkerDict pid=410985)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
[36m(WorkerDict pid=410985)[0m Some weights of Qwen2ForTokenClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B-Instruct and are newly initialized: ['score.bias', 'score.weight']
[36m(WorkerDict pid=410985)[0m You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
[36m(WorkerDict pid=410800)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 4x across cluster] (Ray deduplicates logs by default. Set RAY_DEDUP_LOGS=0 to disable log deduplication, or see https://docs.ray.io/en/master/ray-observability/user-guides/configure-logging.html#log-deduplication for more options.)[0m
[36m(WorkerDict pid=410984)[0m You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.[32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=410984)[0m Some weights of Qwen2ForTokenClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B-Instruct and are newly initialized: ['score.bias', 'score.weight'][32m [repeated 3x across cluster][0m
[36m(WorkerDict pid=410984)[0m You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.[32m [repeated 3x across cluster][0m
Error executing job with overrides: ['system.CUDA_VISIBLE_DEVICES="0,1,2,3"', 'trainer.experiment_name=debug-4GPU-1', 'algorithm.adv_estimator=gae', 'algorithm.kl_ctrl.kl_coef=0.001', 'actor_rollout_ref.actor.kl_loss_coef=0.001', 'actor_rollout_ref.actor.clip_ratio_high=0.2', 'actor_rollout_ref.rollout.rollout_filter_ratio=1', 'trainer.n_gpus_per_node=4', 'actor_rollout_ref.rollout.tensor_model_parallel_size=4', 'micro_batch_size_per_gpu=1', 'ppo_mini_batch_size=8', 'actor_rollout_ref.rollout.max_model_len=2048', 'actor_rollout_ref.rollout.response_length=128']
Traceback (most recent call last):
  File "/scr/jwiseman/RAGEN/train.py", line 302, in <module>
    main()
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/utils.py", line 223, in run_and_report
    raise ex
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
           ^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
            ^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/_internal/hydra.py", line 132, in run
    _ = ret.return_value
        ^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
                       ^^^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/train.py", line 158, in main
    run_ppo(config)
  File "/scr/jwiseman/RAGEN/train.py", line 179, in run_ppo
    ray.get(runner.run.remote(config))
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/ray/_private/auto_init_hook.py", line 21, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/ray/_private/worker.py", line 2822, in get
    values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m Unhandled error (suppress with 'RAY_IGNORE_UNHANDLED_ERRORS=1'): [36mray::WorkerDict.actor_rollout_init_model()[39m (pid=410800, ip=10.255.0.11, actor_id=ddc8cdbdadcd4eab639a8d4f01000000, repr=<verl.single_controller.ray.base.WorkerDict object at 0x7f9dfbbab4a0>)
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/ray/_private/worker.py", line 930, in get_objects
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/single_controller/ray/base.py", line 459, in func
[36m(TaskRunner pid=410309)[0m     return getattr(self.worker_dict[key], name)(*args, **kwargs)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/single_controller/base/decorator.py", line 465, in inner
[36m(TaskRunner pid=410309)[0m     return func(*args, **kwargs)
    raise value.as_instanceof_cause()
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^
ray.exceptions.RayTaskError(ValueError): [36mray::TaskRunner.run()[39m (pid=410309, ip=10.255.0.11, actor_id=90e165ad5328c86e5cb11f5801000000, repr=<train.TaskRunner object at 0x7f5794aa55e0>)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/train.py", line 296, in run
    trainer.init_workers()
  File "/scr/jwiseman/RAGEN/ragen/trainer/agent_trainer.py", line 372, in init_workers
    self.actor_rollout_wg.init_model()
  File "/scr/jwiseman/RAGEN/verl/verl/single_controller/ray/base.py", line 49, in func
    output = ray.get(output)
             ^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ray.exceptions.RayTaskError(ValueError): [36mray::WorkerDict.actor_rollout_init_model()[39m (pid=410983, ip=10.255.0.11, actor_id=ce77c983d2ff3eb932ceb8fc01000000, repr=<verl.single_controller.ray.base.WorkerDict object at 0x7f1556de3680>)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/verl/verl/single_controller/ray/base.py", line 459, in func
    return getattr(self.worker_dict[key], name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/verl/verl/single_controller/base/decorator.py", line 465, in inner
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 518, in init_model
    self.rollout, self.rollout_sharding_manager = self._build_rollout(trust_remote_code=self.config.model.get("trust_remote_code", False))
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 379, in _build_rollout
    rollout = vllm_rollout_cls(
              ^^^^^^^^^^^^^^^^^
  File "/scr/jwiseman/RAGEN/verl/verl/workers/rollout/vllm_rollout/vllm_rollout_spmd.py", line 127, in __init__
    self.inference_engine = LLM(
                            ^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/utils.py", line 1037, in inner
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 243, in __init__
    self.llm_engine = LLMEngine.from_engine_args(
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 513, in from_engine_args
    vllm_config = engine_args.create_engine_config(usage_context)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/arg_utils.py", line 1470, in create_engine_config
    config = VllmConfig(
             ^^^^^^^^^^^
  File "<string>", line 19, in __init__
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 3468, in __post_init__
    self.model_config.verify_with_parallel_config(self.parallel_config)
  File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 753, in verify_with_parallel_config
    raise ValueError(
ValueError: Total number of attention heads (14) must be divisible by tensor parallel size (4).
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 518, in init_model
[36m(TaskRunner pid=410309)[0m     self.rollout, self.rollout_sharding_manager = self._build_rollout(trust_remote_code=self.config.model.get("trust_remote_code", False))
[36m(TaskRunner pid=410309)[0m                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 379, in _build_rollout
[36m(TaskRunner pid=410309)[0m     rollout = vllm_rollout_cls(
[36m(TaskRunner pid=410309)[0m               ^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/workers/rollout/vllm_rollout/vllm_rollout_spmd.py", line 127, in __init__
[36m(TaskRunner pid=410309)[0m     self.inference_engine = LLM(
[36m(TaskRunner pid=410309)[0m                             ^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/utils.py", line 1037, in inner
[36m(TaskRunner pid=410309)[0m     return fn(*args, **kwargs)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 243, in __init__
[36m(TaskRunner pid=410309)[0m     self.llm_engine = LLMEngine.from_engine_args(
[36m(TaskRunner pid=410309)[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 513, in from_engine_args
[36m(TaskRunner pid=410309)[0m     vllm_config = engine_args.create_engine_config(usage_context)
[36m(TaskRunner pid=410309)[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/arg_utils.py", line 1470, in create_engine_config
[36m(TaskRunner pid=410309)[0m     config = VllmConfig(
[36m(TaskRunner pid=410309)[0m              ^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "<string>", line 19, in __init__
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 3468, in __post_init__
[36m(TaskRunner pid=410309)[0m     self.model_config.verify_with_parallel_config(self.parallel_config)
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 753, in verify_with_parallel_config
[36m(TaskRunner pid=410309)[0m     raise ValueError(
[36m(TaskRunner pid=410309)[0m ValueError: Total number of attention heads (14) must be divisible by tensor parallel size (4).
[36m(WorkerDict pid=410984)[0m Flash Attention 2.0 only supports torch.float16 and torch.bfloat16 dtypes, but the current dype in Qwen2ForCausalLM is torch.float32. You should run training or inference using Automatic Mixed-Precision via the `with torch.autocast(device_type='torch_device'):` decorator, or load the model with the `torch_dtype` argument. Example: `model = AutoModel.from_pretrained("openai/whisper-tiny", attn_implementation="flash_attention_2", torch_dtype=torch.float16)`[32m [repeated 3x across cluster][0m
[36m(TaskRunner pid=410309)[0m Unhandled error (suppress with 'RAY_IGNORE_UNHANDLED_ERRORS=1'): [36mray::WorkerDict.actor_rollout_init_model()[39m (pid=410985, ip=10.255.0.11, actor_id=1bed11e093b4589b6cf00c2301000000, repr=<verl.single_controller.ray.base.WorkerDict object at 0x7fc52b46b230>)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/single_controller/ray/base.py", line 459, in func
[36m(TaskRunner pid=410309)[0m     return getattr(self.worker_dict[key], name)(*args, **kwargs)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/single_controller/base/decorator.py", line 465, in inner
[36m(TaskRunner pid=410309)[0m     return func(*args, **kwargs)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 518, in init_model
[36m(TaskRunner pid=410309)[0m     self.rollout, self.rollout_sharding_manager = self._build_rollout(trust_remote_code=self.config.model.get("trust_remote_code", False))
[36m(TaskRunner pid=410309)[0m                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/ragen/workers/fsdp_workers.py", line 379, in _build_rollout
[36m(TaskRunner pid=410309)[0m     rollout = vllm_rollout_cls(
[36m(TaskRunner pid=410309)[0m               ^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/scr/jwiseman/RAGEN/verl/verl/workers/rollout/vllm_rollout/vllm_rollout_spmd.py", line 127, in __init__
[36m(TaskRunner pid=410309)[0m     self.inference_engine = LLM(
[36m(TaskRunner pid=410309)[0m                             ^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/utils.py", line 1037, in inner
[36m(TaskRunner pid=410309)[0m     return fn(*args, **kwargs)
[36m(TaskRunner pid=410309)[0m            ^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/entrypoints/llm.py", line 243, in __init__
[36m(TaskRunner pid=410309)[0m     self.llm_engine = LLMEngine.from_engine_args(
[36m(TaskRunner pid=410309)[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/llm_engine.py", line 513, in from_engine_args
[36m(TaskRunner pid=410309)[0m     vllm_config = engine_args.create_engine_config(usage_context)
[36m(TaskRunner pid=410309)[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/engine/arg_utils.py", line 1470, in create_engine_config
[36m(TaskRunner pid=410309)[0m     config = VllmConfig(
[36m(TaskRunner pid=410309)[0m              ^^^^^^^^^^^
[36m(TaskRunner pid=410309)[0m   File "<string>", line 19, in __init__
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 3468, in __post_init__
[36m(TaskRunner pid=410309)[0m     self.model_config.verify_with_parallel_config(self.parallel_config)
[36m(TaskRunner pid=410309)[0m   File "/home/student/jwiseman/.conda/envs/ragen/lib/python3.12/site-packages/vllm/config.py", line 753, in verify_with_parallel_config
[36m(TaskRunner pid=410309)[0m     raise ValueError(
[36m(TaskRunner pid=410309)[0m ValueError: Total number of attention heads (14) must be divisible by tensor parallel size (4).
